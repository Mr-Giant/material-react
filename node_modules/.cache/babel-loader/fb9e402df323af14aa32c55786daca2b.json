{"ast":null,"code":"import _defineProperty from \"/Users/zhangfan/dav/Takeaway/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/zhangfan/dav/Takeaway/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _handleActions;\n\nimport { handleActions } from 'redux-actions';\nimport ButtonWaveEffect from '../../../utils/ButtonWaveEffect';\nimport { tempSetInfo, switchThemeColor, switchTool, switchSideBar, setRouterText } from './action';\nexport var namespace = 'theme';\nexport var defaultState = {\n  storeTips: 'theme store',\n  ButtonWave: new ButtonWaveEffect(),\n  // 按钮主题\n  themeColor: {\n    color: \"#4caf50\",\n    text: \"current-theme\",\n    activeIndex: 1\n  },\n  // 右侧tool是否展开\n  toolIsHided: true,\n  sidebarIsOpened: true,\n  routerText: ''\n};\nexport var themeReducer = handleActions((_handleActions = {}, _defineProperty(_handleActions, tempSetInfo, function (state, action) {\n  var data = action.payload.data;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: data\n  });\n}), _defineProperty(_handleActions, switchThemeColor, function (state, action) {\n  var themeInfo = action.payload.themeInfo;\n  var newTheme = {\n    color: themeInfo.color,\n    activeIndex: themeInfo.id\n  }; // console.log(state, action)\n\n  return _objectSpread(_objectSpread({}, state), {}, {\n    themeColor: _objectSpread({}, newTheme)\n  });\n}), _defineProperty(_handleActions, switchTool, function (state, action) {\n  var status = action.payload.status;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    toolIsHided: status\n  });\n}), _defineProperty(_handleActions, switchSideBar, function (state, action) {\n  var status = action.payload.status;\n  console.error(_objectSpread(_objectSpread({}, state), {}, {\n    sidebarIsOpened: status\n  }));\n  return _objectSpread(_objectSpread({}, state), {}, {\n    sidebarIsOpened: status\n  });\n}), _defineProperty(_handleActions, setRouterText, function (state, action) {\n  var _ref = action.payload || '',\n      routerText = _ref.routerText;\n\n  return _objectSpread(_objectSpread({}, state), {}, {\n    routerText: routerText\n  });\n}), _handleActions), defaultState);","map":{"version":3,"sources":["/Users/zhangfan/dav/Takeaway/material-dashboard-react/src/store/modules/theme/reducer.js"],"names":["handleActions","ButtonWaveEffect","tempSetInfo","switchThemeColor","switchTool","switchSideBar","setRouterText","namespace","defaultState","storeTips","ButtonWave","themeColor","color","text","activeIndex","toolIsHided","sidebarIsOpened","routerText","themeReducer","state","action","data","payload","themeInfo","newTheme","id","status","console","error"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,SACEC,WADF,EAEEC,gBAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,aALF,QAMO,UANP;AAQA,OAAO,IAAMC,SAAS,GAAG,OAAlB;AAEP,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,aADe;AAE1BC,EAAAA,UAAU,EAAE,IAAIT,gBAAJ,EAFc;AAG1B;AACAU,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,IAAI,EAAE,eAFI;AAGVC,IAAAA,WAAW,EAAE;AAHH,GAJc;AAS1B;AACAC,EAAAA,WAAW,EAAE,IAVa;AAW1BC,EAAAA,eAAe,EAAE,IAXS;AAY1BC,EAAAA,UAAU,EAAE;AAZc,CAArB;AAeP,OAAO,IAAMC,YAAY,GAAGlB,aAAa,uDAGpCE,WAHoC,EAGtB,UAACiB,KAAD,EAAQC,MAAR,EAAmB;AAAA,MACxBC,IADwB,GACfD,MAAM,CAACE,OADQ,CACxBD,IADwB;AAEhC,yCAAYF,KAAZ;AAAmBE,IAAAA,IAAI,EAAJA;AAAnB;AACD,CANoC,mCAQpClB,gBARoC,EAQjB,UAACgB,KAAD,EAAQC,MAAR,EAAmB;AAAA,MAC7BG,SAD6B,GACfH,MAAM,CAACE,OADQ,CAC7BC,SAD6B;AAErC,MAAMC,QAAQ,GAAG;AACfZ,IAAAA,KAAK,EAAEW,SAAS,CAACX,KADF;AAEfE,IAAAA,WAAW,EAAES,SAAS,CAACE;AAFR,GAAjB,CAFqC,CAMrC;;AACA,yCAAYN,KAAZ;AAAmBR,IAAAA,UAAU,oBAAOa,QAAP;AAA7B;AACD,CAhBoC,mCAkBpCpB,UAlBoC,EAkBvB,UAACe,KAAD,EAAQC,MAAR,EAAmB;AAAA,MACvBM,MADuB,GACZN,MAAM,CAACE,OADK,CACvBI,MADuB;AAE/B,yCAAYP,KAAZ;AAAmBJ,IAAAA,WAAW,EAAEW;AAAhC;AACD,CArBoC,mCAsBpCrB,aAtBoC,EAsBpB,UAACc,KAAD,EAAQC,MAAR,EAAmB;AAAA,MAC1BM,MAD0B,GACfN,MAAM,CAACE,OADQ,CAC1BI,MAD0B;AAElCC,EAAAA,OAAO,CAACC,KAAR,iCAAmBT,KAAnB;AAA0BH,IAAAA,eAAe,EAAEU;AAA3C;AACA,yCAAYP,KAAZ;AAAmBH,IAAAA,eAAe,EAAEU;AAApC;AACD,CA1BoC,mCA4BpCpB,aA5BoC,EA4BpB,UAACa,KAAD,EAAQC,MAAR,EAAmB;AAAA,aACXA,MAAM,CAACE,OAAP,IAAkB,EADP;AAAA,MAC1BL,UAD0B,QAC1BA,UAD0B;;AAElC,yCAAYE,KAAZ;AAAmBF,IAAAA,UAAU,EAAVA;AAAnB;AACD,CA/BoC,oBAiCvCT,YAjCuC,CAAlC","sourcesContent":["import { handleActions } from 'redux-actions'\nimport ButtonWaveEffect from '../../../utils/ButtonWaveEffect'\n\nimport {\n  tempSetInfo,\n  switchThemeColor,\n  switchTool,\n  switchSideBar,\n  setRouterText,\n} from './action'\n\nexport const namespace = 'theme'\n\nexport const defaultState = {\n  storeTips: 'theme store',\n  ButtonWave: new ButtonWaveEffect(),\n  // 按钮主题\n  themeColor: {\n    color: \"#4caf50\",\n    text: \"current-theme\",\n    activeIndex: 1,\n  },\n  // 右侧tool是否展开\n  toolIsHided: true,\n  sidebarIsOpened: true,\n  routerText: '',\n}\n\nexport const themeReducer = handleActions(\n  {\n    // 示例\n    [tempSetInfo]: (state, action) => {\n      const { data } = action.payload\n      return { ...state, data }\n    },\n    // 主题切换\n    [switchThemeColor]: (state, action) => {\n      const { themeInfo } = action.payload\n      const newTheme = {\n        color: themeInfo.color,\n        activeIndex: themeInfo.id,\n      }\n      // console.log(state, action)\n      return { ...state, themeColor: { ...newTheme} }\n    },\n    // 右侧tool工具栏显示切换\n    [switchTool]: (state, action) => {\n      const { status } = action.payload\n      return { ...state, toolIsHided: status }\n    },\n    [switchSideBar]: (state, action) => {\n      const { status } = action.payload\n      console.error({ ...state, sidebarIsOpened: status });\n      return { ...state, sidebarIsOpened: status }\n    },\n    // router text切换\n    [setRouterText]: (state, action) => {\n      const { routerText } = action.payload || ''\n      return { ...state, routerText }\n    }\n  },\n  defaultState\n)\n\n"]},"metadata":{},"sourceType":"module"}