{"ast":null,"code":"import { cam } from './cam';\n\nvar dtr = function dtr(d) {\n  return d * Math.PI / 180;\n};\n\nvar trans = {\n  parts: {\n    sz: function sz(p, _sz) {\n      return {\n        x: p.x * _sz.x,\n        y: p.y * _sz.y,\n        z: p.z * _sz.z\n      };\n    },\n    rot: {\n      x: function x(p, rot) {\n        return {\n          x: p.x,\n          y: p.y * Math.cos(dtr(rot.x)) - p.z * Math.sin(dtr(rot.x)),\n          z: p.y * Math.sin(dtr(rot.x)) + p.z * Math.cos(dtr(rot.x))\n        };\n      },\n      y: function y(p, rot) {\n        return {\n          x: p.x * Math.cos(dtr(rot.y)) + p.z * Math.sin(dtr(rot.y)),\n          y: p.y,\n          z: -p.x * Math.sin(dtr(rot.y)) + p.z * Math.cos(dtr(rot.y))\n        };\n      },\n      z: function z(p, rot) {\n        return {\n          x: p.x * Math.cos(dtr(rot.z)) - p.y * Math.sin(dtr(rot.z)),\n          y: p.x * Math.sin(dtr(rot.z)) + p.y * Math.cos(dtr(rot.z)),\n          z: p.z\n        };\n      }\n    },\n    pos: function pos(p, _pos) {\n      return {\n        x: p.x + _pos.x,\n        y: p.y + _pos.y,\n        z: p.z + _pos.z\n      };\n    }\n  },\n  pov: {\n    plane: function plane(p) {\n      return {\n        x: p.x * cam.ang.cplane + p.z * cam.ang.splane,\n        y: p.y,\n        z: p.x * -cam.ang.splane + p.z * cam.ang.cplane\n      };\n    },\n    theta: function theta(p) {\n      return {\n        x: p.x,\n        y: p.y * cam.ang.ctheta - p.z * cam.ang.stheta,\n        z: p.y * cam.ang.stheta + p.z * cam.ang.ctheta\n      };\n    },\n    set: function set(p) {\n      return {\n        x: p.x - cam.obj.x,\n        y: p.y - cam.obj.y,\n        z: p.z - cam.obj.z\n      };\n    }\n  },\n  persp: function persp(p) {\n    return {\n      x: p.x * cam.dist.z / p.z * cam.zoom,\n      y: p.y * cam.dist.z / p.z * cam.zoom,\n      z: p.z * cam.zoom,\n      p: cam.dist.z / p.z\n    };\n  },\n  disp: function disp(p, _disp) {\n    return {\n      x: p.x + _disp.x,\n      y: -p.y + _disp.y,\n      z: p.z + _disp.z,\n      p: p.p\n    };\n  },\n  steps: function steps(_obj_, sz, rot, pos, disp) {\n    var _args = trans.parts.sz(_obj_, sz);\n\n    _args = trans.parts.rot.x(_args, rot);\n    _args = trans.parts.rot.y(_args, rot);\n    _args = trans.parts.rot.z(_args, rot);\n    _args = trans.parts.pos(_args, pos);\n    _args = trans.pov.plane(_args);\n    _args = trans.pov.theta(_args);\n    _args = trans.pov.set(_args);\n    _args = trans.persp(_args);\n    _args = trans.disp(_args, disp);\n    return _args;\n  }\n};\nexport { trans };","map":{"version":3,"sources":["/Users/zhangfan/dav/Takeaway/material-react/src/canvas/trans.js"],"names":["cam","dtr","d","Math","PI","trans","parts","sz","p","x","y","z","rot","cos","sin","pos","pov","plane","ang","cplane","splane","theta","ctheta","stheta","set","obj","persp","dist","zoom","disp","steps","_obj_","_args"],"mappings":"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","sourcesContent":["import { cam } from './cam'\n\nconst dtr = (d) => {\n  return d * Math.PI / 180\n}\nconst trans = {\n  parts: {\n    sz: function (p, sz) {\n      return {\n        x: p.x * sz.x,\n        y: p.y * sz.y,\n        z: p.z * sz.z\n      }\n    },\n    rot: {\n      x: function (p, rot) {\n        return {\n          x: p.x,\n          y: p.y * Math.cos(dtr(rot.x)) - p.z * Math.sin(dtr(rot.x)),\n          z: p.y * Math.sin(dtr(rot.x)) + p.z * Math.cos(dtr(rot.x))\n        }\n      },\n      y: function (p, rot) {\n        return {\n          x: p.x * Math.cos(dtr(rot.y)) + p.z * Math.sin(dtr(rot.y)),\n          y: p.y,\n          z: -p.x * Math.sin(dtr(rot.y)) + p.z * Math.cos(dtr(rot.y))\n        }\n      },\n      z: function (p, rot) {\n        return {\n          x: p.x * Math.cos(dtr(rot.z)) - p.y * Math.sin(dtr(rot.z)),\n          y: p.x * Math.sin(dtr(rot.z)) + p.y * Math.cos(dtr(rot.z)),\n          z: p.z\n        }\n      }\n    },\n    pos: function (p, pos) {\n      return {\n        x: p.x + pos.x,\n        y: p.y + pos.y,\n        z: p.z + pos.z\n      }\n    }\n  },\n  pov: {\n    plane: function (p) {\n      return {\n        x: p.x * cam.ang.cplane + p.z * cam.ang.splane,\n        y: p.y,\n        z: p.x * -cam.ang.splane + p.z * cam.ang.cplane\n      }\n    },\n    theta: function (p) {\n      return {\n        x: p.x,\n        y: p.y * cam.ang.ctheta - p.z * cam.ang.stheta,\n        z: p.y * cam.ang.stheta + p.z * cam.ang.ctheta\n      }\n    },\n    set: function (p) {\n      return {\n        x: p.x - cam.obj.x,\n        y: p.y - cam.obj.y,\n        z: p.z - cam.obj.z\n      }\n    }\n  },\n  persp: function (p) {\n    return {\n      x: p.x * cam.dist.z / p.z * cam.zoom,\n      y: p.y * cam.dist.z / p.z * cam.zoom,\n      z: p.z * cam.zoom,\n      p: cam.dist.z / p.z\n    }\n  },\n  disp: function (p, disp) {\n    return {\n      x: p.x + disp.x,\n      y: -p.y + disp.y,\n      z: p.z + disp.z,\n      p: p.p\n    }\n  },\n  steps: function (_obj_, sz, rot, pos, disp) {\n    var _args = trans.parts.sz(_obj_, sz)\n    _args = trans.parts.rot.x(_args, rot)\n    _args = trans.parts.rot.y(_args, rot)\n    _args = trans.parts.rot.z(_args, rot)\n    _args = trans.parts.pos(_args, pos)\n    _args = trans.pov.plane(_args)\n    _args = trans.pov.theta(_args)\n    _args = trans.pov.set(_args)\n    _args = trans.persp(_args)\n    _args = trans.disp(_args, disp)\n    return _args\n  }\n}\n\nexport {\n  trans\n}"]},"metadata":{},"sourceType":"module"}